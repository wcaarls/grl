experiment: 
  type: experiment/online_learning
  runs: 10
  run_offset: 0
  trials: 0
  steps: 3000000
  rate: 0
  test_interval: 10
  test_trials: 10
  output: quadcopter_sac
  environment: 
    type: environment/modeled
    model: 
      type: model/dynamical
      control_step: 0.05
      integration_steps: 5
      dynamics: 
        type: dynamics/quadcopter
    task: 
      type: task/quadcopter/regulator
      timeout: 60
      limit_penalty: 10
      q: [ 1.0, 1.0, 1.0, 0, 0, 0, 0.1, 0.1, 0.5, 0, 0, 0 ]
      r: [ 0, 0, 0, 0 ]
    exporter:
      type: exporter/csv
      file: quadcopter_sac_signals
      enabled: 0
  agent: 
    type: agent/replay
    memory_size: 1000000
    replay_steps: 1024
    batch_size: 256
    observation_steps: 10000
    threads: 0
    policy: 
      type: mapping/policy/filtering
      observation_idx: 0--12
      action_idx: 1--5
      policy: 
        type: mapping/policy/action
        sigma: []
        theta: []
        decay_rate: 1
        decay_min: 0
        renormalize: 1
        output_min: 0++experiment/environment/task/action_min
        output_max: 0++experiment/environment/task/action_max
        projector: 
          type: projector/pre/normalizing
          signed: 1
          input_min: experiment/environment/task/observation_min
          input_max: experiment/environment/task/observation_max
          projector: 
            type: projector/pre/geometric
            angles: [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0]
            normalized: 1
            projector: 
              type: projector/identity
        representation: 
          type: representation/parameterized/tensorflow
          interval: 10
          tau: 0.01
          file: $@/../4layer_tanh_sac.py ../../projector/projector/memory experiment/environment/task/action_dims
          memory: 0.1
          input_layer: s_in, a_in
          output_layer: v, a_out
          init_node: init
          update_node: update
    predictor: 
      type: predictor/ddpg
      gamma: 0.99
      reward_scale: [1]
      use_target_actor: 0
      observation: s_in
      action_in: a_in
      action_out: a_out
      value: v
      target: target
      critic_update: update
      actor_update: a_update
      obs_projector: experiment/agent/policy/policy/projector
      action_projector: 
        type: projector/pre/normalizing
        signed: 1
        input_min: experiment/environment/task/action_min
        input_max: experiment/environment/task/action_max
        projector: 
          type: projector/identity
      representation: experiment/agent/policy/policy/representation
  test_agent: 
    type: agent/fixed
    policy: 
      type: mapping/policy/filtering
      observation_idx: experiment/agent/policy/observation_idx
      action_idx: experiment/agent/policy/action_idx
      policy: 
        type: mapping/policy/action
        sigma: []
        theta: []
        decay_rate: 1
        decay_min: 0
        renormalize: 1
        output_min: experiment/agent/policy/policy/output_min
        output_max: experiment/agent/policy/policy/output_max
        projector: experiment/agent/policy/policy/projector
        representation: experiment/agent/policy/policy/representation
  save_every: never
visualizer: 
  type: visualizer/glut
curve_visualization: 
  type: visualization/state
  input_dims: [3]
  input_min: [-100]
  input_max: [0]
  memory: 256
  state: experiment/curve
model_visualization: 
  type: visualization/quadcopter
  state: experiment/environment/state
